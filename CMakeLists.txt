#
# Copyright 2019 Xilinx Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cmake_minimum_required(VERSION 3.5)

project(aibox_aa2)

SET(CMAKE_INSTALL_PREFIX $ENV{OECORE_TARGET_SYSROOT})

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-narrowing -fpermissive -rdynamic -Wl,--no-undefined" )
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -std=c++14")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0")
SET(CMAKE_C_FLAGS_DEBUG "-O0")

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
find_package(GStreamer REQUIRED)
find_package(OpenCV REQUIRED COMPONENTS opencv_core opencv_video opencv_videoio opencv_imgproc opencv_imgcodecs opencv_highgui)

SET(INSTALL_PATH "opt/xilinx")


add_subdirectory(reidtracker)

add_library(ivas_reid SHARED src/ivas_reid.cpp src/common.hpp)
target_include_directories(ivas_reid PRIVATE ${GSTREAMER_INCLUDE_DIRS})
target_include_directories(ivas_reid PRIVATE reidtracker/include/)
target_link_libraries(ivas_reid
  gstapp-1.0 gstreamer-1.0 gstbase-1.0 gobject-2.0 glib-2.0 gstvideo-1.0 gstallocators-1.0 gstrtsp-1.0 gstrtspserver-1.0
  glib-2.0 gobject-2.0 ${OpenCV_LIBS} gstivasmeta-1.0 jansson vitis_ai_library-reid aa2_reidtracker glog pthread)
install(TARGETS ivas_reid DESTINATION ${INSTALL_PATH}/lib)
add_dependencies(ivas_reid aa2_reidtracker)

add_library(ivas_crop SHARED src/ivas_crop.cpp)
target_include_directories(ivas_crop PRIVATE ${GSTREAMER_INCLUDE_DIRS})
target_link_libraries(ivas_crop
  gstapp-1.0 gstreamer-1.0 gstbase-1.0 gobject-2.0 glib-2.0 gstvideo-1.0 gstallocators-1.0 gstrtsp-1.0 gstrtspserver-1.0
  glib-2.0 gobject-2.0 ${OpenCV_LIBS} gstivasmeta-1.0 jansson ivasutil gstivasinfermeta-1.0 glog)
install(TARGETS ivas_crop DESTINATION ${INSTALL_PATH}/lib)

add_library(ivas_drawreid SHARED src/ivas_drawreid.cpp)
target_include_directories(ivas_drawreid PRIVATE ${GSTREAMER_INCLUDE_DIRS})
target_link_libraries(ivas_drawreid
  gstapp-1.0 gstreamer-1.0 gstbase-1.0 gobject-2.0 glib-2.0 gstvideo-1.0 gstallocators-1.0 gstrtsp-1.0 gstrtspserver-1.0
  glib-2.0 gobject-2.0 ${OpenCV_LIBS} gstivasmeta-1.0 jansson ivasutil gstivasinfermeta-1.0)
install(TARGETS ivas_drawreid DESTINATION ${INSTALL_PATH}/lib)


add_library(ivas_pedpp SHARED src/ivas_pedpp.c)
target_include_directories(ivas_pedpp PRIVATE ${GSTREAMER_INCLUDE_DIRS})
target_link_libraries(ivas_pedpp
  jansson ivasutil gstivasinfermeta-1.0)
install(TARGETS ivas_pedpp DESTINATION ${INSTALL_PATH}/lib)

add_executable(aibox_aa2 src/main.cpp)
target_include_directories(aibox_aa2 PRIVATE ${GSTREAMER_INCLUDE_DIRS})
target_link_libraries(aibox_aa2 
  gstapp-1.0 gstreamer-1.0 gstbase-1.0 gobject-2.0 glib-2.0 gstvideo-1.0 gstallocators-1.0 gstrtsp-1.0 gstrtspserver-1.0
  glib-2.0 gobject-2.0 )
install(TARGETS aibox_aa2 DESTINATION ${INSTALL_PATH}/bin)

install(FILES
    README
    DESTINATION ${INSTALL_PATH}/
    RENAME      README_AA2
    )

install(PROGRAMS
    script/aa2.sh
    DESTINATION ${INSTALL_PATH}/bin)

install(FILES
    config/ped_pp.json
    config/refinedet.json
    config/crop.json
    config/reid.json
    config/draw_reid.json
    DESTINATION ${INSTALL_PATH}/share/aibox_aa2)

install(DIRECTORY
    notebook/
    DESTINATION usr/share/notebooks/aibox_aa2/)

set(VERSION "1.0.1")
set(CPACK_PACKAGE_VERSION ${VERSION})
set(CPACK_GENERATOR "RPM")
set(CPACK_PACKAGE_NAME "AIbox_aa2")
set(CPACK_PACKAGE_RELEASE 1)
set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "arm64")
set(CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
set(CPACK_PACKAGING_INSTALL_PREFIX "/")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
set(CPACK_RPM_SPEC_MORE_DEFINE "%define _build_id_links none")
include(CPack)
